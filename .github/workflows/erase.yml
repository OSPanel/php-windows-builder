name: 🗑️ Delete All Runs and Artifacts

on:
  workflow_dispatch:

jobs:
  delete-all:
    runs-on: ubuntu-latest

    steps:
      - name: 🛡️ Checkout repository
        uses: actions/checkout@v4

      - name: 🔧 Setup GitHub CLI and authenticate
        run: |
          # Check GitHub CLI version
          gh --version

          # GitHub CLI automatically uses GITHUB_TOKEN from environment
          # Verify authentication
          gh auth status
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: 🛑 Cancel all running workflow runs (except current)
        run: |
          echo "🛑 Cancelling all running workflow runs (except current)..."

          current_run_id="${{ github.run_id }}"
          page=1
          total_cancelled=0

          while true; do
            echo "📖 Processing page $page for running workflows..."

            # Get running workflows with pagination (100 per page)
            running_runs=$(gh api repos/${{ github.repository }}/actions/runs \
              --jq ".workflow_runs[] | select(.status == \"in_progress\" or .status == \"queued\") | select(.id != $current_run_id) | .id" \
              -f per_page=100 -f page=$page 2>/dev/null || echo "")

            if [ -z "$running_runs" ]; then
              if [ $page -eq 1 ]; then
                echo "🏃 No running workflow runs found (except current one)."
              fi
              break
            fi

            run_count=$(echo "$running_runs" | wc -l)
            echo "🏃 Found $run_count running workflow runs on page $page"

            # Process in batches of 25
            batch_size=25
            batch_counter=0
            temp_file="/tmp/running_runs_page_$page"
            echo "$running_runs" > "$temp_file"

            while IFS= read -r run_id && [ -n "$run_id" ]; do
              batch_counter=$((batch_counter + 1))
              total_cancelled=$((total_cancelled + 1))

              echo "🛑 [$total_cancelled] Cancelling workflow run ID: $run_id"
              if gh run cancel $run_id --force >/dev/null 2>&1; then
                echo "✅ Workflow run $run_id cancelled"
              else
                echo "❌ Failed to cancel workflow run $run_id"
              fi

              # Small delay every 25 items to avoid rate limiting
              if [ $((batch_counter % batch_size)) -eq 0 ]; then
                echo "⏸️ Batch completed, pausing 2 seconds..."
                sleep 2
              fi
            done < "$temp_file"

            rm -f "$temp_file"
            page=$((page + 1))
          done

          echo "🎯 Total workflow runs cancelled: $total_cancelled"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: ⏳ Wait for cancellations to complete
        run: |
          echo "⏳ Waiting 30 seconds for cancellations to complete..."
          sleep 30

      - name: 🗑️ Delete all artifacts with pagination
        run: |
          echo "⚠️ Deleting all artifacts for repository ${{ github.repository }}..."

          page=1
          total_deleted=0

          while true; do
            echo "📖 Processing page $page for artifacts..."

            # Get artifacts with pagination (100 per page)
            artifact_data=$(gh api repos/${{ github.repository }}/actions/artifacts \
              -f per_page=100 -f page=$page 2>/dev/null || echo "")

            if [ -z "$artifact_data" ]; then
              echo "❌ Failed to fetch artifacts data"
              break
            fi

            artifact_ids=$(echo "$artifact_data" | jq -r '.artifacts[].id' 2>/dev/null || echo "")

            if [ -z "$artifact_ids" ] || [ "$artifact_ids" = "null" ]; then
              if [ $page -eq 1 ]; then
                echo "📦 No artifacts found."
              fi
              break
            fi

            artifact_count=$(echo "$artifact_ids" | wc -l)
            echo "📦 Found $artifact_count artifacts on page $page"

            # Process in batches of 25
            batch_size=25
            batch_counter=0
            temp_file="/tmp/artifacts_page_$page"
            echo "$artifact_ids" > "$temp_file"

            while IFS= read -r artifact_id && [ -n "$artifact_id" ]; do
              batch_counter=$((batch_counter + 1))
              total_deleted=$((total_deleted + 1))

              echo "🗑️ [$total_deleted] Deleting artifact ID: $artifact_id"
              if gh api --method DELETE "repos/${{ github.repository }}/actions/artifacts/$artifact_id" >/dev/null 2>&1; then
                echo "✅ Artifact $artifact_id deleted"
              else
                echo "❌ Failed to delete artifact $artifact_id (may have expired)"
              fi

              # Small delay every 25 items to avoid rate limiting
              if [ $((batch_counter % batch_size)) -eq 0 ]; then
                echo "⏸️ Batch completed, pausing 2 seconds..."
                sleep 2
              fi
            done < "$temp_file"

            rm -f "$temp_file"
            page=$((page + 1))
          done

          echo "🎯 Total artifacts deleted: $total_deleted"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: 🗑️ Delete all workflow runs with pagination (except current)
        run: |
          echo "⚠️ Deleting all workflow runs for repository ${{ github.repository }}..."
          echo "ℹ️ Current run (${{ github.run_id }}) will be preserved and NOT deleted"

          current_run_id="${{ github.run_id }}"
          page=1
          total_deleted=0

          while true; do
            echo "📖 Processing page $page for workflow runs..."

            # Get workflow runs with pagination (100 per page)
            run_data=$(gh api repos/${{ github.repository }}/actions/runs \
              -f per_page=100 -f page=$page 2>/dev/null || echo "")

            if [ -z "$run_data" ]; then
              echo "❌ Failed to fetch workflow runs data"
              break
            fi

            run_ids=$(echo "$run_data" | jq -r ".workflow_runs[] | select(.id != $current_run_id) | .id" 2>/dev/null || echo "")

            if [ -z "$run_ids" ] || [ "$run_ids" = "null" ]; then
              if [ $page -eq 1 ]; then
                echo "🏃 No workflow runs found to delete (except current one)."
              fi
              break
            fi

            run_count=$(echo "$run_ids" | wc -l)
            echo "🏃 Found $run_count workflow runs on page $page"

            # Process in batches of 25
            batch_size=25
            batch_counter=0
            temp_file="/tmp/runs_page_$page"
            echo "$run_ids" > "$temp_file"

            while IFS= read -r run_id && [ -n "$run_id" ]; do
              batch_counter=$((batch_counter + 1))
              total_deleted=$((total_deleted + 1))

              echo "🗑️ [$total_deleted] Deleting workflow run ID: $run_id"
              if gh api --method DELETE "repos/${{ github.repository }}/actions/runs/$run_id" >/dev/null 2>&1; then
                echo "✅ Workflow run $run_id deleted"
              else
                echo "❌ Failed to delete workflow run $run_id"
              fi

              # Small delay every 25 items to avoid rate limiting
              if [ $((batch_counter % batch_size)) -eq 0 ]; then
                echo "⏸️ Batch completed, pausing 2 seconds..."
                sleep 2
              fi
            done < "$temp_file"

            rm -f "$temp_file"
            page=$((page + 1))
          done

          echo "🎯 Total workflow runs deleted: $total_deleted"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: 🧹 Final cleanup verification
        run: |
          echo "🔍 Verifying cleanup results..."

          # Check remaining artifacts
          remaining_artifacts=$(gh api repos/${{ github.repository }}/actions/artifacts \
            --jq '.total_count' 2>/dev/null || echo "0")
          echo "📦 Remaining artifacts: $remaining_artifacts"

          # Check remaining runs (should be 1 - current run)
          total_runs=$(gh api repos/${{ github.repository }}/actions/runs \
            --jq '.total_count' 2>/dev/null || echo "0")
          remaining_runs=$((total_runs - 1))

          echo "🏃 Total workflow runs: $total_runs"
          echo "🏃 Other workflow runs (excluding current): $remaining_runs"
          echo "🛡️ Current run (${{ github.run_id }}) preserved"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: ✅ Cleanup completed successfully
        run: |
          echo "🎉 Cleanup completed successfully!"
          echo "📊 Repository: ${{ github.repository }}"
          echo "⏰ Completion time: $(date)"
          echo "🔧 GitHub CLI version: $(gh --version | head -n1)"
          echo ""
          echo "📋 Summary:"
          echo "  ✅ All artifacts deleted (with pagination)"
          echo "  ✅ All workflow runs deleted (except current)"
          echo "  🛡️ Current workflow run preserved"
          echo "  🆔 Current run ID: ${{ github.run_id }}"
          echo ""
          echo "ℹ️ This workflow run will remain in the history for reference"